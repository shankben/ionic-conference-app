schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Complexity {
  family: ComplexityFamily
  key: ID!
  number: Int!
  updatedAt: AWSDateTime!
}

type ComplexityFamily {
  genus: ComplexityGenus
  name: String!
}

type ComplexityGenus {
  name: String!
  species: ComplexitySpecies
}

type ComplexitySpecies {
  commonName: String!
  name: String!
}

type Location {
  center: Boolean
  city: String!
  key: ID!
  lat: Float!
  lng: Float!
  name: String!
  state: String!
  updatedAt: AWSDateTime!
  weather: LocationWeather
}

type LocationWeather {
  description: String!
  feelsLike: Float!
  humidity: Int!
  iconUrl: String!
  pressure: Int!
  status: String!
  temp: Float!
  tempMax: Float!
  tempMin: Float!
  updatedAt: AWSDateTime!
}

type Mutation {
  updateComplexity(key: ID!): Complexity
  updateLocation(key: ID!): Location
  updateSession(key: ID!): Session
  updateSpeaker(key: ID!): Speaker
  updateTrack(key: ID!): Track
}

type Query {
  getComplexity(key: ID): Complexity
  getLocation(key: ID): Location
  getSession(key: ID): Session
  getSpeaker(key: ID): Speaker
  getTrack(key: ID): Track
  listComplexities: [Complexity]
  listLocations: [Location]
  listSessions: [Session]
  listSpeakers: [Speaker]
  listTracks: [Track]
}

type Session {
  date: String!
  description: String
  groupId: String!
  id: String!
  key: ID!
  location: String!
  name: String!
  speakerNames: [String!]
  timeEnd: String!
  timeStart: String!
  tracks: [String!]!
  updatedAt: AWSDateTime!
}

type Speaker {
  about: String!
  email: String!
  id: String!
  instagram: String!
  key: ID!
  location: String!
  name: String!
  phone: String!
  profilePic: String!
  title: String!
  twitter: String!
  updatedAt: AWSDateTime!
}

type Subscription {
  updatedComplexity: Complexity @aws_subscribe(mutations : ["updateComplexity"])
  updatedLocation: Location @aws_subscribe(mutations : ["updateLocation"])
  updatedSession: Session @aws_subscribe(mutations : ["updateSession"])
  updatedSpeaker: Speaker @aws_subscribe(mutations : ["updateSpeaker"])
  updatedTrack: Track @aws_subscribe(mutations : ["updateTrack"])
}

type Track {
  icon: String!
  key: ID!
  name: String!
  updatedAt: AWSDateTime!
}
